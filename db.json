{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/typescript/source/style.less","path":"style.less","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/algolia.svg","path":"images/algolia.svg","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/baidu.svg","path":"images/baidu.svg","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/azure.svg","path":"images/azure.svg","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/profile.png","path":"images/profile.png","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/google.svg","path":"images/google.svg","modified":1,"renderable":1},{"_id":"themes/typescript/source/js/jquery.fitvids.js","path":"js/jquery.fitvids.js","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/typescript/source/js/app.js","path":"js/app.js","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/logo.psd","path":"images/logo.psd","modified":1,"renderable":1},{"_id":"themes/typescript/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.eot","path":"fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.svg","path":"fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.ttf","path":"fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/typescript/source/fonts/icomoon.woff","path":"fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/typescript/source/fonts/selection.json","path":"fonts/selection.json","modified":1,"renderable":1},{"_id":"themes/typescript/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/typescript/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1}],"Cache":[{"_id":"themes/typescript/.DS_Store","hash":"2906622ea8a8ce61b86f59cff3b6df67f0a86510","modified":1496084968000},{"_id":"themes/typescript/.git","hash":"6035cc187db695e54fb0ef559db8a53f1a3c5d48","modified":1496069095000},{"_id":"themes/typescript/LICENSE","hash":"44409ab0bcd7853e2ac93faad84e57299711e6bf","modified":1496069095000},{"_id":"themes/typescript/README.md","hash":"b1aaa01fd75e54008da34b3173071b14e69cbcec","modified":1496069095000},{"_id":"themes/typescript/_config.yml","hash":"dd3728a77971059af2eb3a556036f7f9c8f25b6c","modified":1496089754000},{"_id":"source/_posts/Hexo-Setup.md","hash":"75f5c936eaabc6716fb6344b89d58c135fb8200f","modified":1496091021000},{"_id":"themes/typescript/layout/category.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1496069095000},{"_id":"themes/typescript/layout/archive.ejs","hash":"f17e3aa0fe5960713042c25351ce3bfecbc11149","modified":1496087873000},{"_id":"themes/typescript/layout/index.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1496069095000},{"_id":"themes/typescript/layout/layout.ejs","hash":"98ecd0c47c632bd0d0485ccdbb5ecdebb89cd924","modified":1496089768000},{"_id":"themes/typescript/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1496069095000},{"_id":"themes/typescript/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1496069095000},{"_id":"themes/typescript/layout/tag.ejs","hash":"c97be36b33bb44957778587f00c978f2d28016f8","modified":1496069095000},{"_id":"themes/typescript/source/style.less","hash":"0bf8c06ca5190d38cc3e67bcf493b21fcb68c6ed","modified":1496091363000},{"_id":"themes/typescript/layout/_partial/archive.ejs","hash":"c97d3dc87fe8d90ce24c76e826364a9b9e3d52f5","modified":1496087795000},{"_id":"themes/typescript/layout/_partial/article.ejs","hash":"7603e7e704933fe36a44fae3f7f8a6349c2d7af4","modified":1496069095000},{"_id":"themes/typescript/layout/_partial/footer.ejs","hash":"4b8480800f5f9ca97856c56cad83ee7f3fcbf6b3","modified":1496087805000},{"_id":"themes/typescript/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1496069095000},{"_id":"themes/typescript/layout/_partial/head.ejs","hash":"de6e087b05465f8a03ba69baf41427cb886b740c","modified":1496086751000},{"_id":"themes/typescript/layout/_partial/header.ejs","hash":"2762ecdda1f2ee23b2913ade73ae0ebae717596e","modified":1496087819000},{"_id":"themes/typescript/layout/_partial/post.ejs","hash":"e29e6c236f4e8fd894ab9ae7e40b23af6e879d38","modified":1496085839000},{"_id":"themes/typescript/layout/_partial/loading.ejs","hash":"ceee88f1d76217e3ae33668e6d6ed90ac65ba4fe","modified":1496083715000},{"_id":"themes/typescript/layout/_partial/scripts.ejs","hash":"7f3491e8205e73e432aad88cbe0fc681f924935c","modified":1496069095000},{"_id":"themes/typescript/demo/ghost-theme-typescript-screenshot.jpg","hash":"a112ee6b71690c52f37572a5a6093582e69d95bf","modified":1496069095000},{"_id":"themes/typescript/source/images/algolia.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1496069095000},{"_id":"themes/typescript/source/images/favicon.png","hash":"cb994813f70f804eb99dd09fd115cce0c1f36cfe","modified":1496073228000},{"_id":"themes/typescript/source/images/baidu.svg","hash":"c8c111d40c97e0c662b0b12849702e7207feeee5","modified":1496069095000},{"_id":"themes/typescript/source/images/logo.png","hash":"8cb99b2b28095d6fefd2d70f9b203da89894cd7b","modified":1496069095000},{"_id":"themes/typescript/source/images/azure.svg","hash":"d355a126d8d47647140022f32e755d41c5708474","modified":1496069095000},{"_id":"themes/typescript/source/images/profile.png","hash":"fb182f3479dc51a018034cbc7a35bb838226dada","modified":1496085385000},{"_id":"themes/typescript/source/images/google.svg","hash":"66938eaaa4ff7c21ee6b7c3c5fefbc004ee6d7c9","modified":1496069095000},{"_id":"themes/typescript/source/js/jquery.fitvids.js","hash":"57946a22c79654014eb00fb548f727d302221873","modified":1496069095000},{"_id":"themes/typescript/source/images/logo.svg","hash":"ae158ec89cc19545c21722ac1640fd2427465e6a","modified":1496072667000},{"_id":"themes/typescript/source/js/app.js","hash":"643c3dca3cd27af857066985f0e7121bbbbf4d45","modified":1496082745000},{"_id":"themes/typescript/source/images/logo.psd","hash":"3b95ae5e8914af72154ece31d2a2401453decff3","modified":1496069095000},{"_id":"themes/typescript/source/less/_archive.less","hash":"cf9b8d65a572b27a17fcd017b772c273fd256179","modified":1496069095000},{"_id":"themes/typescript/source/js/search.js","hash":"096541cbdeec832b3895bdc5c9e727ce8f6ab619","modified":1496087960000},{"_id":"themes/typescript/source/less/_fonts.less","hash":"e92b5662cdb5324246af7cabc3fef303878dd88b","modified":1496087769000},{"_id":"themes/typescript/source/less/_content.less","hash":"9fa75742a57bdd9aa927666d4f0f528f308ca2fc","modified":1496069781000},{"_id":"themes/typescript/source/less/_base.less","hash":"383108b3e20d5d7d3ad8afb77356069f5dd5ab0e","modified":1496091254000},{"_id":"themes/typescript/source/less/_footer.less","hash":"477ef9620ad03ae3b53718267c3f65d3d44d1cb8","modified":1496069095000},{"_id":"themes/typescript/source/less/_main.less","hash":"bf358d8c252cbe3580534cafbc0fee18c47e526f","modified":1496085897000},{"_id":"themes/typescript/source/less/_header.less","hash":"2460fe86ace21bc74e28502d012d5468c8469b6e","modified":1496090674000},{"_id":"themes/typescript/source/less/_normalize.less","hash":"02fe53286d071637534d5aa2c57c76c168c0d521","modified":1496069095000},{"_id":"themes/typescript/source/less/_pagination.less","hash":"aaae6df1ad64c67b552c68f1301f186e15e4dfbe","modified":1496069095000},{"_id":"themes/typescript/source/fonts/icomoon.eot","hash":"09e365cb1dfa85a63d0841b69c30020cff621dad","modified":1496069095000},{"_id":"themes/typescript/source/less/_search.less","hash":"785ed94dadb38c444a9d2a685bca581a86bf367d","modified":1496069095000},{"_id":"themes/typescript/source/fonts/icomoon.svg","hash":"f3efaca04d1f812242163713838f30147abab693","modified":1496069095000},{"_id":"themes/typescript/source/fonts/icomoon.ttf","hash":"db33ccce951a88b6a08f147363ace84d20db93ae","modified":1496069095000},{"_id":"themes/typescript/source/fonts/icomoon.woff","hash":"c58f59e279dcc265fb43a0d8378b92064c120ce8","modified":1496069095000},{"_id":"themes/typescript/source/fonts/selection.json","hash":"bda9a289f55fdd01c3b60b573b4c715fc83eff69","modified":1496087857000},{"_id":"themes/typescript/source/js/jquery.min.js","hash":"e3dbb65f2b541d842b50d37304b0102a2d5f2387","modified":1496069095000},{"_id":"themes/typescript/source/images/avatar.png","hash":"2d139540b06dd4db3a63e77708b69b64ae625594","modified":1496069095000},{"_id":"themes/typescript/demo/ghost-theme-typescript-screenshot.png","hash":"d77251051f0d783c84294f8eaac26f7650930eee","modified":1496069095000},{"_id":"public/atom.xml","hash":"294261e165d4f047c7fee63e4cd3273e0278d233","modified":1496091386242},{"_id":"public/search.xml","hash":"eabe3e40f13622512c23a73b61d8360d26ef76fe","modified":1496091386243},{"_id":"public/sitemap.xml","hash":"4d1484cc3ed9a2f0cdd027993b4812d35d323dae","modified":1496091386308},{"_id":"public/2017/05/28/Hexo-Setup/index.html","hash":"a752d4043d09631eb408ead2f6d0ca0ecf318150","modified":1496091386320},{"_id":"public/archives/index.html","hash":"1f70371e9c4810e548aeef74f0ee9cbfffc95645","modified":1496091386320},{"_id":"public/categories/system/index.html","hash":"1e47abdbf1004d5442443119a02379a829b1eaf2","modified":1496091386321},{"_id":"public/index.html","hash":"d4732f4ff38be0cd18dfb7129beb2b5cad9836ba","modified":1496091386321},{"_id":"public/tags/Hexo/index.html","hash":"e7acf87954b62bd2c3e9ccc7a66657d9ccca3ddb","modified":1496091386321},{"_id":"public/tags/NPM/index.html","hash":"18b43fc626ec43b490bf31094ad0a4111c7dfcf1","modified":1496091386321},{"_id":"public/tags/Node-js/index.html","hash":"4e508b31cc0c0ebdd220a8f01f0f53774a46b348","modified":1496091386321},{"_id":"public/images/algolia.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1496091386325},{"_id":"public/images/favicon.png","hash":"cb994813f70f804eb99dd09fd115cce0c1f36cfe","modified":1496091386325},{"_id":"public/images/baidu.svg","hash":"c8c111d40c97e0c662b0b12849702e7207feeee5","modified":1496091386325},{"_id":"public/images/logo.png","hash":"8cb99b2b28095d6fefd2d70f9b203da89894cd7b","modified":1496091386325},{"_id":"public/images/azure.svg","hash":"d355a126d8d47647140022f32e755d41c5708474","modified":1496091386325},{"_id":"public/images/profile.png","hash":"fb182f3479dc51a018034cbc7a35bb838226dada","modified":1496091386325},{"_id":"public/images/google.svg","hash":"66938eaaa4ff7c21ee6b7c3c5fefbc004ee6d7c9","modified":1496091386325},{"_id":"public/images/logo.svg","hash":"ae158ec89cc19545c21722ac1640fd2427465e6a","modified":1496091386325},{"_id":"public/images/logo.psd","hash":"3b95ae5e8914af72154ece31d2a2401453decff3","modified":1496091386325},{"_id":"public/fonts/icomoon.eot","hash":"09e365cb1dfa85a63d0841b69c30020cff621dad","modified":1496091386325},{"_id":"public/fonts/icomoon.svg","hash":"f3efaca04d1f812242163713838f30147abab693","modified":1496091386325},{"_id":"public/fonts/icomoon.ttf","hash":"db33ccce951a88b6a08f147363ace84d20db93ae","modified":1496091386325},{"_id":"public/fonts/icomoon.woff","hash":"c58f59e279dcc265fb43a0d8378b92064c120ce8","modified":1496091386325},{"_id":"public/css/prism-tomorrow.css","hash":"2eb468e82b669045d37cb6b503af97dabc0a9eb2","modified":1496091386327},{"_id":"public/js/jquery.fitvids.js","hash":"57946a22c79654014eb00fb548f727d302221873","modified":1496091386362},{"_id":"public/js/app.js","hash":"643c3dca3cd27af857066985f0e7121bbbbf4d45","modified":1496091386362},{"_id":"public/js/search.js","hash":"096541cbdeec832b3895bdc5c9e727ce8f6ab619","modified":1496091386362},{"_id":"public/fonts/selection.json","hash":"53d9f4c90196fc000db849031fbae592f9b59bb7","modified":1496091386362},{"_id":"public/js/jquery.min.js","hash":"e3dbb65f2b541d842b50d37304b0102a2d5f2387","modified":1496091386362},{"_id":"public/images/avatar.png","hash":"2d139540b06dd4db3a63e77708b69b64ae625594","modified":1496091386362},{"_id":"public/style.css","hash":"d494b4170c67ba6ea2d944762f8b373009292581","modified":1496091386555}],"Category":[{"name":"system","_id":"cj3am6lj80001rgvep3tgzfzl"}],"Data":[],"Page":[],"Post":[{"title":"搭建Hexo博客系统","date":"2017-05-28T19:00:26.000Z","_content":"\n## 安装Hexo\n\n因为Mac已经有XCode自带的Git和Node.js开发环境，所以直接安装。\n\n中间遇到了恶心的Log环境问题（DTraceProviderBindings）。不明白为啥这么多人喜欢用bunyan。参考[kikiroc](https://kikoroc.com/2016/05/04/resolve-hexo-DTraceProviderBindings-MODULE-NOT-FOUND.html)上的方法解决。\n\n```sh\n$ npm install -g -hexo-cli --op-optional\n```\n\n如果之后还是出现DTraceProviderBindings的错误，可以在项目删除这个模块。因为没有必要调试Hexo\n```sh\n$ npm uninstall dtrace-provider\n```\n\n按照[Hexo手册](https://hexo.io/docs/setup.html)上说的配置。十分顺利。\n\n```sh\n$ hexo init myblog\n$ cd myblog\n$ npm install\n```\n\n编辑_config.yml的时候遇到一个问题，时区设置不支持UTC+的表示方法。必须填写名称。还好有wiki上的[时区名称列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)。\n\n如果时区设置错误，所有hexo命令都不会有正确结果。因为他们都是按照时间戳判断文章是不是应该加入内容更新。\n\n启动本地测试环境\n\n```sh\n$ hexo generate\n$ hexo server\n```\n\n打开[Hexo本地测试服务器](http://localhost:4000/)，一切顺利\n\n## 发布到GitHub\n\n需要插件hexo-deployer-git\n\n参考[安装方法](https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39)\n\n```sh\n$ npm install hexo-deployer-git --save\n```\n\n向_config.yml增加git设置\n\n```yml\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n\ttype: git\n\trepo: git@github.com:slavikshen/slavikshen.github.io.git\n\tbranch: master\n```\n\n测试提交\n\n```sh\nhexo deploy\n```\n\n## 设置皮肤\n\n先寻找资源\n[官方网站](https://hexo.io/themes/)\n[Github](https://github.com/hexojs/hexo/wiki/Themes)\n\n复制或者git clone内容到themes下。每个主题可能会有特殊的模块依赖关系。\n\n最后选了Artchen的[Typescript](https://github.com/artchen/hexo-theme-typescript)。实现很干净，方便修改。\n\n因为会需要修改内容，所以先Fork，然后同步了自己分支下的内容安装。\n\n安装依赖的模块，并把Typescript加为submodule，方便以后同步。\n\n```sh\nnpm i --save hexo-generator-tag hexo-renderer-ejs hexo-renderer-less hexo-renderer-marked hexo-pagination\ngit submodule add https://github.com/slavikshen/hexo-theme-typescript.git themes/typescript\n```\n\n## 配置VSCode环境\n\n为了方便更新Hexo内容，减少终端窗口，决定采用VSCode的Task功能。\n\n首先在package.json里增加脚本功能。\n\n```json\n\"scripts\": {\n\t\"deploy\": \"hexo clean && hexo deploy;\",\n\t\"hot-server\": \"hexo server & hexo generate --watch\"\n}\n```\n\ndeploy方便提交内容。\n\n```sh\n$ npm run deploy \n```\n\nhot-server简化启动内容变化监视和本地测试服务器。\n\n```sh\n$ npm run hot-server\n```\n\n然后创建.vscode\\task.json\n\n```json\n{\n\t\"version\": \"0.1.0\",\n\t\"command\": \"npm\",\n\t\"isShellCommand\": true,\n\t\"showOutput\": \"always\",\n\t\"suppressTaskName\": true,\n\t\"tasks\": [\n\t\t{\n\t\t\t// 部署\n\t\t\t\"taskName\": \"deploy\",\n\t\t\t\"args\": [\"run\", \"deploy\"]\n\t\t},\n\t\t{\n\t\t\t// 测试\n\t\t\t\"taskName\": \"test\",\n\t\t\t\"args\": [\"run\", \"hot-server\"]\n\t\t}\n\t]\n}\n```\n\n调出VSCode命令窗口 <kbd>CMD/CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>P</kbd>，输入test。\n\n在Output会出现测试服务器和内容变化监控的启动信息。\n\n```sh\n> hexo-site@0.0.0 hot-server /Users/slavik/Documents/myblog\n> hexo server & hexo generate --watch\n\nINFO\tStart processing\n\n```\n\n\n\n\n\n\n\n","source":"_posts/Hexo-Setup.md","raw":"---\ntitle: 搭建Hexo博客系统\ndate: 2017-05-28 15:00:26\ntags: [Hexo,NPM,Node.js]\ncategories: system\n---\n\n## 安装Hexo\n\n因为Mac已经有XCode自带的Git和Node.js开发环境，所以直接安装。\n\n中间遇到了恶心的Log环境问题（DTraceProviderBindings）。不明白为啥这么多人喜欢用bunyan。参考[kikiroc](https://kikoroc.com/2016/05/04/resolve-hexo-DTraceProviderBindings-MODULE-NOT-FOUND.html)上的方法解决。\n\n```sh\n$ npm install -g -hexo-cli --op-optional\n```\n\n如果之后还是出现DTraceProviderBindings的错误，可以在项目删除这个模块。因为没有必要调试Hexo\n```sh\n$ npm uninstall dtrace-provider\n```\n\n按照[Hexo手册](https://hexo.io/docs/setup.html)上说的配置。十分顺利。\n\n```sh\n$ hexo init myblog\n$ cd myblog\n$ npm install\n```\n\n编辑_config.yml的时候遇到一个问题，时区设置不支持UTC+的表示方法。必须填写名称。还好有wiki上的[时区名称列表](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)。\n\n如果时区设置错误，所有hexo命令都不会有正确结果。因为他们都是按照时间戳判断文章是不是应该加入内容更新。\n\n启动本地测试环境\n\n```sh\n$ hexo generate\n$ hexo server\n```\n\n打开[Hexo本地测试服务器](http://localhost:4000/)，一切顺利\n\n## 发布到GitHub\n\n需要插件hexo-deployer-git\n\n参考[安装方法](https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39)\n\n```sh\n$ npm install hexo-deployer-git --save\n```\n\n向_config.yml增加git设置\n\n```yml\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n\ttype: git\n\trepo: git@github.com:slavikshen/slavikshen.github.io.git\n\tbranch: master\n```\n\n测试提交\n\n```sh\nhexo deploy\n```\n\n## 设置皮肤\n\n先寻找资源\n[官方网站](https://hexo.io/themes/)\n[Github](https://github.com/hexojs/hexo/wiki/Themes)\n\n复制或者git clone内容到themes下。每个主题可能会有特殊的模块依赖关系。\n\n最后选了Artchen的[Typescript](https://github.com/artchen/hexo-theme-typescript)。实现很干净，方便修改。\n\n因为会需要修改内容，所以先Fork，然后同步了自己分支下的内容安装。\n\n安装依赖的模块，并把Typescript加为submodule，方便以后同步。\n\n```sh\nnpm i --save hexo-generator-tag hexo-renderer-ejs hexo-renderer-less hexo-renderer-marked hexo-pagination\ngit submodule add https://github.com/slavikshen/hexo-theme-typescript.git themes/typescript\n```\n\n## 配置VSCode环境\n\n为了方便更新Hexo内容，减少终端窗口，决定采用VSCode的Task功能。\n\n首先在package.json里增加脚本功能。\n\n```json\n\"scripts\": {\n\t\"deploy\": \"hexo clean && hexo deploy;\",\n\t\"hot-server\": \"hexo server & hexo generate --watch\"\n}\n```\n\ndeploy方便提交内容。\n\n```sh\n$ npm run deploy \n```\n\nhot-server简化启动内容变化监视和本地测试服务器。\n\n```sh\n$ npm run hot-server\n```\n\n然后创建.vscode\\task.json\n\n```json\n{\n\t\"version\": \"0.1.0\",\n\t\"command\": \"npm\",\n\t\"isShellCommand\": true,\n\t\"showOutput\": \"always\",\n\t\"suppressTaskName\": true,\n\t\"tasks\": [\n\t\t{\n\t\t\t// 部署\n\t\t\t\"taskName\": \"deploy\",\n\t\t\t\"args\": [\"run\", \"deploy\"]\n\t\t},\n\t\t{\n\t\t\t// 测试\n\t\t\t\"taskName\": \"test\",\n\t\t\t\"args\": [\"run\", \"hot-server\"]\n\t\t}\n\t]\n}\n```\n\n调出VSCode命令窗口 <kbd>CMD/CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>P</kbd>，输入test。\n\n在Output会出现测试服务器和内容变化监控的启动信息。\n\n```sh\n> hexo-site@0.0.0 hot-server /Users/slavik/Documents/myblog\n> hexo server & hexo generate --watch\n\nINFO\tStart processing\n\n```\n\n\n\n\n\n\n\n","slug":"Hexo-Setup","published":1,"updated":"2017-05-29T20:50:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3am6lj10000rgvepgnhutca","content":"<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>因为Mac已经有XCode自带的Git和Node.js开发环境，所以直接安装。</p>\n<p>中间遇到了恶心的Log环境问题（DTraceProviderBindings）。不明白为啥这么多人喜欢用bunyan。参考<a href=\"https://kikoroc.com/2016/05/04/resolve-hexo-DTraceProviderBindings-MODULE-NOT-FOUND.html\" target=\"_blank\" rel=\"external\">kikiroc</a>上的方法解决。</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">$ npm install -g -hexo-cli --op-optional\n</code></pre>\n<p>如果之后还是出现DTraceProviderBindings的错误，可以在项目删除这个模块。因为没有必要调试Hexo</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">$ npm uninstall dtrace-provider\n</code></pre>\n<p>按照<a href=\"https://hexo.io/docs/setup.html\" target=\"_blank\" rel=\"external\">Hexo手册</a>上说的配置。十分顺利。</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">$ hexo init myblog\n$ cd myblog\n$ npm install\n</code></pre>\n<p>编辑_config.yml的时候遇到一个问题，时区设置不支持UTC+的表示方法。必须填写名称。还好有wiki上的<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"external\">时区名称列表</a>。</p>\n<p>如果时区设置错误，所有hexo命令都不会有正确结果。因为他们都是按照时间戳判断文章是不是应该加入内容更新。</p>\n<p>启动本地测试环境</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">$ hexo generate\n$ hexo server\n</code></pre>\n<p>打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">Hexo本地测试服务器</a>，一切顺利</p>\n<h2 id=\"发布到GitHub\"><a href=\"#发布到GitHub\" class=\"headerlink\" title=\"发布到GitHub\"></a>发布到GitHub</h2><p>需要插件hexo-deployer-git</p>\n<p>参考<a href=\"https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39\" target=\"_blank\" rel=\"external\">安装方法</a></p>\n<pre class=\" language-sh\"><code class=\"language-sh\">$ npm install hexo-deployer-git --save\n</code></pre>\n<p>向_config.yml增加git设置</p>\n<pre class=\" language-yml\"><code class=\"language-yml\"># Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n    type: git\n    repo: git@github.com:slavikshen/slavikshen.github.io.git\n    branch: master\n</code></pre>\n<p>测试提交</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">hexo deploy\n</code></pre>\n<h2 id=\"设置皮肤\"><a href=\"#设置皮肤\" class=\"headerlink\" title=\"设置皮肤\"></a>设置皮肤</h2><p>先寻找资源<br><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">官方网站</a><br><a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"external\">Github</a></p>\n<p>复制或者git clone内容到themes下。每个主题可能会有特殊的模块依赖关系。</p>\n<p>最后选了Artchen的<a href=\"https://github.com/artchen/hexo-theme-typescript\" target=\"_blank\" rel=\"external\">Typescript</a>。实现很干净，方便修改。</p>\n<p>因为会需要修改内容，所以先Fork，然后同步了自己分支下的内容安装。</p>\n<p>安装依赖的模块，并把Typescript加为submodule，方便以后同步。</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">npm i --save hexo-generator-tag hexo-renderer-ejs hexo-renderer-less hexo-renderer-marked hexo-pagination\ngit submodule add https://github.com/slavikshen/hexo-theme-typescript.git themes/typescript\n</code></pre>\n<h2 id=\"配置VSCode环境\"><a href=\"#配置VSCode环境\" class=\"headerlink\" title=\"配置VSCode环境\"></a>配置VSCode环境</h2><p>为了方便更新Hexo内容，减少终端窗口，决定采用VSCode的Task功能。</p>\n<p>首先在package.json里增加脚本功能。</p>\n<pre class=\" language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo clean &amp;&amp; hexo deploy;\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"hot-server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo server &amp; hexo generate --watch\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>deploy方便提交内容。</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">$ npm run deploy\n</code></pre>\n<p>hot-server简化启动内容变化监视和本地测试服务器。</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">$ npm run hot-server\n</code></pre>\n<p>然后创建.vscode\\task.json</p>\n<pre class=\" language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"isShellCommand\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"showOutput\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"suppressTaskName\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            // 部署\n            <span class=\"token property\">\"taskName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"deploy\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            // 测试\n            <span class=\"token property\">\"taskName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hot-server\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>调出VSCode命令窗口 <kbd>CMD/CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>P</kbd>，输入test。</p>\n<p>在Output会出现测试服务器和内容变化监控的启动信息。</p>\n<pre class=\" language-sh\"><code class=\"language-sh\">> hexo-site@0.0.0 hot-server /Users/slavik/Documents/myblog\n> hexo server & hexo generate --watch\n\nINFO    Start processing\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>因为Mac已经有XCode自带的Git和Node.js开发环境，所以直接安装。</p>\n<p>中间遇到了恶心的Log环境问题（DTraceProviderBindings）。不明白为啥这么多人喜欢用bunyan。参考<a href=\"https://kikoroc.com/2016/05/04/resolve-hexo-DTraceProviderBindings-MODULE-NOT-FOUND.html\" target=\"_blank\" rel=\"external\">kikiroc</a>上的方法解决。</p>\n<pre><code class=\"sh\">$ npm install -g -hexo-cli --op-optional\n</code></pre>\n<p>如果之后还是出现DTraceProviderBindings的错误，可以在项目删除这个模块。因为没有必要调试Hexo</p>\n<pre><code class=\"sh\">$ npm uninstall dtrace-provider\n</code></pre>\n<p>按照<a href=\"https://hexo.io/docs/setup.html\" target=\"_blank\" rel=\"external\">Hexo手册</a>上说的配置。十分顺利。</p>\n<pre><code class=\"sh\">$ hexo init myblog\n$ cd myblog\n$ npm install\n</code></pre>\n<p>编辑_config.yml的时候遇到一个问题，时区设置不支持UTC+的表示方法。必须填写名称。还好有wiki上的<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"external\">时区名称列表</a>。</p>\n<p>如果时区设置错误，所有hexo命令都不会有正确结果。因为他们都是按照时间戳判断文章是不是应该加入内容更新。</p>\n<p>启动本地测试环境</p>\n<pre><code class=\"sh\">$ hexo generate\n$ hexo server\n</code></pre>\n<p>打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">Hexo本地测试服务器</a>，一切顺利</p>\n<h2 id=\"发布到GitHub\"><a href=\"#发布到GitHub\" class=\"headerlink\" title=\"发布到GitHub\"></a>发布到GitHub</h2><p>需要插件hexo-deployer-git</p>\n<p>参考<a href=\"https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39\" target=\"_blank\" rel=\"external\">安装方法</a></p>\n<pre><code class=\"sh\">$ npm install hexo-deployer-git --save\n</code></pre>\n<p>向_config.yml增加git设置</p>\n<pre><code class=\"yml\"># Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n    type: git\n    repo: git@github.com:slavikshen/slavikshen.github.io.git\n    branch: master\n</code></pre>\n<p>测试提交</p>\n<pre><code class=\"sh\">hexo deploy\n</code></pre>\n<h2 id=\"设置皮肤\"><a href=\"#设置皮肤\" class=\"headerlink\" title=\"设置皮肤\"></a>设置皮肤</h2><p>先寻找资源<br><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"external\">官方网站</a><br><a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"external\">Github</a></p>\n<p>复制或者git clone内容到themes下。每个主题可能会有特殊的模块依赖关系。</p>\n<p>最后选了Artchen的<a href=\"https://github.com/artchen/hexo-theme-typescript\" target=\"_blank\" rel=\"external\">Typescript</a>。实现很干净，方便修改。</p>\n<p>因为会需要修改内容，所以先Fork，然后同步了自己分支下的内容安装。</p>\n<p>安装依赖的模块，并把Typescript加为submodule，方便以后同步。</p>\n<pre><code class=\"sh\">npm i --save hexo-generator-tag hexo-renderer-ejs hexo-renderer-less hexo-renderer-marked hexo-pagination\ngit submodule add https://github.com/slavikshen/hexo-theme-typescript.git themes/typescript\n</code></pre>\n<h2 id=\"配置VSCode环境\"><a href=\"#配置VSCode环境\" class=\"headerlink\" title=\"配置VSCode环境\"></a>配置VSCode环境</h2><p>为了方便更新Hexo内容，减少终端窗口，决定采用VSCode的Task功能。</p>\n<p>首先在package.json里增加脚本功能。</p>\n<pre><code class=\"json\">&quot;scripts&quot;: {\n    &quot;deploy&quot;: &quot;hexo clean &amp;&amp; hexo deploy;&quot;,\n    &quot;hot-server&quot;: &quot;hexo server &amp; hexo generate --watch&quot;\n}\n</code></pre>\n<p>deploy方便提交内容。</p>\n<pre><code class=\"sh\">$ npm run deploy\n</code></pre>\n<p>hot-server简化启动内容变化监视和本地测试服务器。</p>\n<pre><code class=\"sh\">$ npm run hot-server\n</code></pre>\n<p>然后创建.vscode\\task.json</p>\n<pre><code class=\"json\">{\n    &quot;version&quot;: &quot;0.1.0&quot;,\n    &quot;command&quot;: &quot;npm&quot;,\n    &quot;isShellCommand&quot;: true,\n    &quot;showOutput&quot;: &quot;always&quot;,\n    &quot;suppressTaskName&quot;: true,\n    &quot;tasks&quot;: [\n        {\n            // 部署\n            &quot;taskName&quot;: &quot;deploy&quot;,\n            &quot;args&quot;: [&quot;run&quot;, &quot;deploy&quot;]\n        },\n        {\n            // 测试\n            &quot;taskName&quot;: &quot;test&quot;,\n            &quot;args&quot;: [&quot;run&quot;, &quot;hot-server&quot;]\n        }\n    ]\n}\n</code></pre>\n<p>调出VSCode命令窗口 <kbd>CMD/CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>P</kbd>，输入test。</p>\n<p>在Output会出现测试服务器和内容变化监控的启动信息。</p>\n<pre><code class=\"sh\">&gt; hexo-site@0.0.0 hot-server /Users/slavik/Documents/myblog\n&gt; hexo server &amp; hexo generate --watch\n\nINFO    Start processing\n</code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3am6lj10000rgvepgnhutca","category_id":"cj3am6lj80001rgvep3tgzfzl","_id":"cj3am6ljc0004rgvebhcx3f64"}],"PostTag":[{"post_id":"cj3am6lj10000rgvepgnhutca","tag_id":"cj3am6ljb0002rgve0ri2ekr3","_id":"cj3am6lje0006rgve3of80lvz"},{"post_id":"cj3am6lj10000rgvepgnhutca","tag_id":"cj3am6ljb0003rgvepuy8opyv","_id":"cj3am6lje0007rgve3k4teje6"},{"post_id":"cj3am6lj10000rgvepgnhutca","tag_id":"cj3am6ljd0005rgve43hiedv9","_id":"cj3am6lje0008rgve621z9yr1"}],"Tag":[{"name":"Hexo","_id":"cj3am6ljb0002rgve0ri2ekr3"},{"name":"NPM","_id":"cj3am6ljb0003rgvepuy8opyv"},{"name":"Node.js","_id":"cj3am6ljd0005rgve43hiedv9"}]}}